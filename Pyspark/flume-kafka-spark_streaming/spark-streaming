"""
 Counts words in UTF8 encoded, '\n' delimited text received from the network every second.
 Usage: kafka_wordcount.py <zk> <topic>

 To run this on your local machine, you need to setup Kafka and create a producer first, see
 http://kafka.apache.org/documentation.html#quickstart

 and then run the example
    `$ bin/spark-submit --jars \
      external/kafka-assembly/target/scala-*/spark-streaming-kafka-assembly-*.jar \
      examples/src/main/python/streaming/kafka_wordcount.py \
      localhost:2181 test`
"""


from __future__ import print_function

import sys

from pyspark import SparkContext
from pyspark.streaming import StreamingContext
from pyspark.streaming.kafka import KafkaUtils

if __name__ == "__main__":
    #if len(sys.argv) != 3:
        #print("Usage: kafka_wordcount.py <zk> <topic>", file=sys.stderr)
        #exit(-1)

    sc = SparkContext(appName="PythonStreamingKafkaWordCount")
    ssc = StreamingContext(sc, 1)

    #zkQuorum, topic = sys.argv[1:]
    zkQuorum = "192.168.0.2:2181,192.168.0.3:2181,192.168.0.4:2181"
    topic={"business":0,"business":1,"business":2}
  
    # "test-consumer-group" : groupid   /opt/kafka/config/consumer.properties
    kvs = KafkaUtils.createStream(ssc, zkQuorum, "test-consumer-group",topic)
    lines = kvs.map(lambda x: x[1])
    counts = lines.flatMap(lambda line: line.split(" ")) \
        .map(lambda word: (word, 1)) \
        .reduceByKey(lambda a, b: a+b)
    counts.pprint()

    ssc.start()
    ssc.awaitTermination()

命令：
  ./spark-submit --master spark://master:7077  --conf "spark.driver.extraJavaOptions=-Dlog4j.configuration=file:../conf/log4j.properties" /home/xuan/mystudy/pyspark/streaming/kafka_wordcount.py
  


